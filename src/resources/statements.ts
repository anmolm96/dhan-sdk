// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../resource';
import * as Core from '../core';
import * as StatementsAPI from './statements';

export class Statements extends APIResource {
  /**
   * The api allows user to fetch trading account ledger with all credit and debit
   * transaction details
   */
  ledger(params: StatementLedgerParams, options?: Core.RequestOptions): Core.APIPromise<Ledger> {
    const { 'access-token': accessToken, ...query } = params;
    return this._client.get('/ledger', {
      query,
      ...options,
      headers: { 'access-token': accessToken, ...options?.headers },
    });
  }
}

export interface Ledger {
  /**
   * credited amount
   */
  credit?: string;

  /**
   * debited amount
   */
  debit?: string;

  /**
   * User specific identification generated by Dhan
   */
  dhanClientId?: string;

  /**
   * exchange name
   */
  exchange?: string;

  /**
   * narration
   */
  narration?: string;

  /**
   * runnable balance
   */
  runbal?: string;

  /**
   * voucher date
   */
  voucherdate?: string;

  /**
   * voucher decscription
   */
  voucherdesc?: string;

  /**
   * voucher number
   */
  vouchernumber?: string;
}

export interface StatementLedgerParams {
  /**
   * Header param:
   */
  'access-token': string;

  /**
   * Query param: date format : yyyy-MM-dd
   */
  'from-date'?: string;

  /**
   * Query param: date format : yyyy-MM-dd
   */
  'to-date'?: string;
}

export namespace Statements {
  export import Ledger = StatementsAPI.Ledger;
  export import StatementLedgerParams = StatementsAPI.StatementLedgerParams;
}
