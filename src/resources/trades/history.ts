// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../resource';
import * as Core from '../../core';
import * as HistoryAPI from './history';

export class History extends APIResource {
  /**
   * The api allows user to retrieve the trade history Often during partial trades or
   * Bracket/ Cover Orders, traders get confused in reading trade from tradebook. The
   * response of the api will include all the trades generated for a particular order
   * id.
   */
  list(
    fromDate: string,
    toDate: string,
    pageNumber: string,
    params: HistoryListParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<HistoryListResponse> {
    const { 'access-token': accessToken } = params;
    return this._client.get(`/trades/${fromDate}/${toDate}/${pageNumber}`, {
      ...options,
      headers: { 'access-token': accessToken, ...options?.headers },
    });
  }
}

export interface TradeHistory {
  /**
   * Brokerage Charges
   */
  brokerageCharges?: number;

  /**
   * Record create date time
   */
  createTime?: string;

  /**
   * Custom trading symbol
   */
  customSymbol?: string;

  /**
   * User specific identification generated by Dhan
   */
  dhanClientId?: string;

  /**
   * For F&O, expiry date of contract
   */
  drvExpiryDate?: string;

  /**
   * For Options, type CALL or PUT
   */
  drvOptionType?: 'CALL' | 'PUT' | 'NA';

  /**
   * For Options, Strike Price
   */
  drvStrikePrice?: number;

  /**
   * Order specific identification generated by Exchange
   */
  exchangeOrderId?: string;

  /**
   * | **Enums**    | **Exchange** | **Segment**       |
   * | ------------ | ------------ | ----------------- |
   * | NSE_EQ       | NSE          | Equity Cash       |
   * | NSE_FNO      | NSE          | Futures & Options |
   * | NSE_CURRENCY | NSE          | Currency          |
   * | BSE_EQ       | BSE          | Equity Cash       |
   * | BSE_FNO      | BSE          | Futures & Options |
   * | BSE_CURRENCY | BSE          | Currency          |
   * | MCX_COMM     | MCX          | Commodity         |
   */
  exchangeSegment?:
    | 'NSE_EQ'
    | 'NSE_FNO'
    | 'NSE_CURRENCY'
    | 'BSE_EQ'
    | 'BSE_FNO'
    | 'BSE_CURRENCY'
    | 'MCX_COMM';

  /**
   * Time at which order reached at exchange end
   */
  exchangeTime?: string;

  /**
   * Trade specific identification, generated by exchange once order is executed
   */
  exchangeTradeId?: string;

  /**
   * Exchange Transaction Charges
   */
  exchangeTransactionCharges?: number;

  /**
   * Instrument of that scrip
   */
  instrument?: string;

  /**
   * Isin Number of that scrip
   */
  isin?: string;

  /**
   * Order specific identification generated by Dhan
   */
  orderId?: string;

  /**
   * | **Enum Values**  | **Description**             |
   * | ---------------- | --------------------------- |
   * | LIMIT            | For Limit Order types       |
   * | MARKET           | For market Order types      |
   * | STOP_LOSS        | For Stop Loss Limit orders  |
   * | STOP_LOSS_MARKET | For Stop Loss Market orders |
   */
  orderType?: 'LIMIT' | 'MARKET' | 'STOP_LOSS' | 'STOP_LOSS_MARKET';

  /**
   * | **Enum Values** | **Description**                                |
   * | --------------- | ---------------------------------------------- |
   * | CNC             | Cash & Carry for equity deliveries             |
   * | INTRADAY        | Intraday for Equity, Futures & Options         |
   * | MARGIN          | Carry Forward in Futures & Options             |
   * | CO              | Cover Order; entry and stop loss               |
   * | BO              | Bracket Order; entry, stop loss & target price |
   * | MTF             | Margin Traded Fund                             |
   *
   * **CO & BO product types will be valid only for Intraday**
   */
  productType?: 'CNC' | 'INTRADAY' | 'MARGIN' | 'MTF' | 'CO' | 'BO';

  /**
   * SEBI tax
   */
  sebiTax?: number;

  /**
   * Exchange standard identification for each scrip
   */
  securityId?: string;

  /**
   * Service tax
   */
  serviceTax?: number;

  /**
   * Stamp duty paid on transfer of shares
   */
  stampDuty?: number;

  /**
   * stt
   */
  stt?: number;

  /**
   * Price at which trade executed
   */
  tradedPrice?: number;

  /**
   * Number of shares traded
   */
  tradedQuantity?: number;

  /**
   * Exchange standard trading symbol
   */
  tradingSymbol?: string;

  /**
   * Signifies the type of transaction wether it's BUY or SELL
   */
  transactionType?: 'BUY' | 'SELL';

  /**
   * Record update date time
   */
  updateTime?: string;
}

export type HistoryListResponse = Array<TradeHistory>;

export interface HistoryListParams {
  'access-token': string;
}

export namespace History {
  export import TradeHistory = HistoryAPI.TradeHistory;
  export import HistoryListResponse = HistoryAPI.HistoryListResponse;
  export import HistoryListParams = HistoryAPI.HistoryListParams;
}
